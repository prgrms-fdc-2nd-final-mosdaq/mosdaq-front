name: Front Deployment

on:
  push:
    branches: 
      - dev

jobs:
  build:
    name: react build & deploy
    runs-on: ubuntu-latest

    steps:

      # CI서버로 코드를 내려받는 과정
      - name: checkout Github Action
        uses: actions/checkout@v3

      # workflow 실행시 매번 npm 다운받아 올리는 것이 아니라 캐시에 저장해서 CI서버로 내려받는 방식
      - name: Get npm cache directory
        id: npm-cache-dir
        run:  |
          echo "::set-output name=dir::$(npm config get cache)"

      - uses: actions/cache@v3
        id: npm-cache
        path: ${{ steps.npm-cache-dir.outputs.dir }}
            key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
            restore-keys: |
              ${{ runner.os }}-node-

      - name: install npm dependencies
        run: npm install

      - name: react build
        run: npm run build

      - name: AWS access credentials
        uses: aws-actions/configure-aws-credentials@v1
        with: 
          aws-access-key-id: ${{ secrets.AWS_S3_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_S3_SECRET_ACCESS_KEY_ID }}
          aws-region: ap-northease-2
      
      - name: Upload to S3
        env:
          BUCKET_NAME: ${{ secrets.AWS_S3_BUCKET_NAME }}
        run: |
          aws s3 sync \
            ./build s3://$BUCKET_NAME
      
      # 빌드 사항 바로 적용
      - name: CloudFront delete cache
        env:
          CLOUD_FRONT_ID: ${{ secrets.AWS_CLOUDFRONT_ID }}
        run: |
          aws cloudfront create-invalidation \
            --distribution-id $CLOUD_FRONT_ID --paths /*
    